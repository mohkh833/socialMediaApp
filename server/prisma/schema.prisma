// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @default(autoincrement()) @id
  email String @unique
  name String
  password String
  imgUrl String?
  isAdmin Boolean?
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @default(now())
  
  posts Post[]
  comments Comment[]
  reports Report[]
}

model Post {
  id        Int     @default(autoincrement()) @id
  title     String
  content   String
  postImg String?
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @default(now())
  postWriter    User?   @relation(fields: [user_id], references: [id])
  comments Comment[] 
  reports Report[]
  user_id   Int
}

model Comment{
  id Int @default(autoincrement()) @id
  content String
  CommentWriter User? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  CommentedPost Post? @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @default(now())
  reports Report[]
  user_id Int
  post_id Int
}

model Report{
  id Int @default(autoincrement()) @id
  content String
  ReportWriter User? @relation(fields: [user_id], references: [id], onDelete: Cascade,  onUpdate: Cascade)
  ReportedPost Post? @relation(fields: [post_id], references: [id], onDelete: Cascade,  onUpdate: Cascade)
  ReportedComment Comment? @relation(fields: [comment_id], references: [id], onDelete: Cascade,  onUpdate: Cascade)
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @default(now())
  user_id Int
  post_id Int?
  comment_id Int?
}
